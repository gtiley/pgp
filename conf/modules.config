/*
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    Config file for defining DSL2 per module options and publishing paths
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    Available keys to override module options:
        ext.args   = Additional arguments appended to command in module.
        ext.args2  = Second set of arguments appended to command in module (multi-tool modules).
        ext.args3  = Third set of arguments appended to command in module (multi-tool modules).
        ext.prefix = File name prefix for output files.
----------------------------------------------------------------------------------------
*/

process {

    publishDir = [
        path: { "${params.outdir}/${task.process.tokenize(':')[-1].tokenize('_')[0].toLowerCase()}" },
        mode: params.publish_dir_mode,
        saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
    ]

    withName: FASTQC {
        ext.args = '--quiet'
        cpus = 2
        memory = { 4.GB * task.attempt }
    }
    withName: MULTIQC {
        ext.args   = { params.multiqc_title ? "--title \"$params.multiqc_title\"" : '' }
        publishDir = [
            path: { "${params.outdir}/multiqc" },
            mode: params.publish_dir_mode,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
    }

    withName: FASTP {
        cpus = 4
        memory = { 2.GB * task.attempt }
    }

    withName: BBMAP_BBDUK {
        cpus = 4
        memory = { 4.GB * task.attempt }
    }

    withName: BWA_MEM {
        cpus = 8
        memory = { 8.GB * task.attempt }

        ext.args = { [
            '-R \"@RG\\tID:',
            "${meta.id}",
            '\\tSM:',
            "${meta.id}",
            '\\tLB:lib\\tPL:ILLUMINA\"'
        ].join('')}
    }

    withName: SAMTOOLS_VIEW {
        ext.args = { [
            '-b',
            '-q 20',
            '-f 2',
            '-F 4'].join(' ') }

        ext.prefix = { [
            "${meta.id}",
            ".q20"].join('') }
    }

    withName: PICARD_MARKDUPLICATES {
        ext.args = { [
            '--CREATE_INDEX'
        ].join(' ') }
    }

    withName: GATK4_HAPLOTYPECALLER {
        ext.args = { [
            '-ERC GVCF'
        ].join(' ') }
    }

    withName: GATK4_GENOTYPEGVCFS {
        ext.args = { [
            '--heterozygosity 0.0001',
            '--heterozygosity-stdev 0.001'
        ].join(' ') }
    }

    withName: SELECT_ALL {
        ext.args = { [
            '--select-type-to-include SNP',
            '--exclude-filtered'
        ].join(' ') }

        ext.prefix = { [
            "${meta.id}",
            ".snps"].join('') }
    }

    withName: GATK4_VARIANTFILTRATION {
        ext.args = { [
            '--filter-expression "FS > 60.0" --filter-name "FS_gt60"',
            '--filter-expression "MQ < 40.0" --filter-name "MQ_lt40"',
            '--filter-expression "ReadPosRankSum < -8.0" --filter-name "ReadPosRankSum_ltm8"',
            '--filter-expression "MQRankSum < -12.5" --filter-name "MQRS_ltm12p5"',
            '--filter-expression "QD < 2.0" --filter-name "QD_lt2"',
            '--filter-expression "SOR > 3.0" --filter-name "SOR_gt3"'
        ].join(' ') }

        ext.prefix = { [
            "${meta.id}",
            ".snps.annotations"].join('') }
    }

        withName: SELECT_PASS {
        ext.args = { [
            '--select-type-to-include SNP',
            '--exclude-filtered'
        ].join(' ') }

        ext.prefix = { [
            "${meta.id}",
            ".snps.gatkfilters"].join('') }
    }

        withName: SELECT_BIPASS {
        ext.args = { [
            '--select-type-to-include SNP',
            '--restrict-alleles-to BIALLELIC'
        ].join(' ') }

        ext.prefix = { [
            "${meta.id}",
            ".biallelic.gatkfilters"].join('') }
    }
}
